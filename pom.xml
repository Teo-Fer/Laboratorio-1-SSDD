<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.banco</groupId>
	<artifactId>lab-01</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>lab-01</name>
	<description>Demo project for Spring Boot</description>
	
	<properties>
		<java.version>17</java.version>
		<spring-cloud.version>2021.0.4</spring-cloud.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.22</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-streams</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-binder-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-binder-kafka-streams</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream</artifactId>
            <scope>test</scope>
            <classifier>test-binder</classifier>
            <type>test-jar</type>
        </dependency>

	</dependencies>

	<dependencyManagement>
    	<dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
				
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.0.0-M5</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.40.2</version>
				<configuration>
					<logDate>default</logDate>
					<autoPull>true</autoPull>
					<verbose>true</verbose>

					<dockerHost>unix:///var/run/docker.sock</dockerHost>
					<images>
						<image>
							<alias>${db}</alias>
							<name>postgres:13.8-alpine</name>
							<run>
								<env>
									<POSTGRES_USER>bancoadm</POSTGRES_USER>
									<POSTGRES_PASSWORD>bancoadm</POSTGRES_PASSWORD>
									<POSTGRES_DB>bancodb</POSTGRES_DB>
								</env>
								<wait>
									<log>database system is ready to accept connections</log>
									<time>20000</time>
								</wait>
								<log>
									<prefix>DB:</prefix>
									<color>yellow</color>
								</log>
							</run>
						</image>
						<image>
							<name>${project.name}:${project.version}</name>
							<build>
								<from>openjdk:17</from>
								<assembly>
									<name>build</name>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
								<ports>
									<port>8080</port>
								</ports>
								<cmd>java -jar build/${project.name}-${project.version}.jar</cmd>
							</build>
							<run>
								<ports>
									<port>${spring.port}:8080</port>
								</ports>
								<env>
									<SPRING_DATASOURCE_URL>jdbc:postgresql://${db}:5432/bancodb</SPRING_DATASOURCE_URL>
									<SPRING_DATASOURCE_USER>bancoadm</SPRING_DATASOURCE_USER>
									<SPRING_DATASOURCE_PASSWORD>bancoadm</SPRING_DATASOURCE_PASSWORD>
									<BANCO_SERVER_ID>${banco.server.id}</BANCO_SERVER_ID>
								</env>
								<log>
									<prefix>spring: </prefix>
									<color>blue</color>
								</log>
								<dependsOn>
									<container>${db}</container>
								</dependsOn>
								<links>
									<link>${db}</link>
								</links>
								<wait>
									<time>10000</time>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
